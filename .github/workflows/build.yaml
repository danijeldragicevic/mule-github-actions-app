name: Build and Deploy to Anypoint Platform

#TODO Add job timeouts

on:
  push:
    branches: [ dev ]

  pull_request:
    branches: [ qa, prod ]
    types: [ closed ]

# Load secrets defined in the Github account
env:
  USERNAME: ${{ secrets.ANYPOINT_PLATFORM_USERNAME }}
  PASSWORD: ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Stamp artifact file name with commit hash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
            name: artifacts
            path: target/*.jar

  # Runs this job with each new commit pushed against the dev branch
  prepare-environment:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: actions/download-artifact@v4
        with:
          name: artifacts

      - name: Deploy to DEV environment
        if: github.event_name == 'push' && github.ref_name == 'dev'
        run: |
          artifactName=$(ls *.jar | head -1)
          mvn deploy -DmuleDeploy \
           -Dmule.artifact=$artifactName \
           -Danypoint.username="$USERNAME" \
           -Danypoint.password="$PASSWORD" \
           -Danypoint.environment="dev"
      
      - name: Deploy to QA environment
        if: github.event.pull_request.merged == true && github.ref_name == 'qa'
        run: |
          artifactName=$(ls *.jar | head -1)
          mvn deploy -DmuleDeploy \
           -Dmule.artifact=$artifactName \
           -Danypoint.username="$USERNAME" \
           -Danypoint.password="$PASSWORD" \
           -Danypoint.environment="qa"